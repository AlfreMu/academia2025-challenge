name: Deploy Academia Challenge

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DEPLOY_TAG: latest

jobs:
  deploy:
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create remote directory
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: mkdir -p ~/academia2025-challenge

      - name: Copy files to VM
        run: |
          echo "${{ secrets.SSH_KEY }}" > /tmp/private_key
          chmod 600 /tmp/private_key

          scp -i /tmp/private_key -P ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no \
            docker-compose.prod.yml nginx.conf \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/academia2025-challenge/

          rm /tmp/private_key

      - name: Deploy with Docker Swarm
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/academia2025-challenge

            echo "Haciendo login a GHCR"
            echo ${{ secrets.REGISTRY_TOKEN }} | docker login ghcr.io -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

            echo "Inicializando Swarm (si hace falta)"
            docker swarm init --advertise-addr $(hostname -I | awk '{print $1}') || true

            echo "Seteando GITHUB_REPOSITORY en min√∫sculas"
            REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')

            echo "Haciendo pull de la imagen"
            docker pull ghcr.io/$REPO:${{ env.DEPLOY_TAG }}

            echo "Eliminando stack existente (si existe)"
            docker stack rm academiachallenge || true
            echo "Esperando a que se elimine completamente..."
            sleep 6

            echo "Recreando red overlay app-net"
            docker network rm app-net || true
            docker network create --driver overlay --attachable app-net

            echo "Haciendo deploy del stack"
            docker stack deploy -c docker-compose.prod.yml academiachallenge
